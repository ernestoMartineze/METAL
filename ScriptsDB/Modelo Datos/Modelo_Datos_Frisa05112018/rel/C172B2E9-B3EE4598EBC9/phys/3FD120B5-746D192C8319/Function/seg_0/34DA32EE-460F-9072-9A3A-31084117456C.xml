<?xml version = '1.0' encoding = 'UTF-8'?>
<FunctionOracle class="oracle.dbtools.crest.model.design.storage.oracle.FunctionOracle" name="XXFRP_GENERARLC" directorySegmentName="seg_0" id="34DA32EE-460F-9072-9A3A-31084117456C">
<sourceConnName>Frisa_Dev</sourceConnName>
<sourceObjSchema>INGRESOS</sourceObjSchema>
<sourceObjName>XXFRP_GENERARLC</sourceObjName>
<createdBy>USER_1</createdBy>
<createdTime>2018-11-28 17:36:36 UTC</createdTime>
<ownerDesignName>Modelo_Datos_Frisa05112018</ownerDesignName>
<owner>B49CDF25-C9F3-EDEF-C941-F4C9279E8404</owner>
<source>CREATE OR REPLACE FUNCTION INGRESOS.XXFRP_GENERARLC(&lt;br/&gt;      division       IN VARCHAR2 ,&lt;br/&gt;      proyecto       IN VARCHAR2 ,&lt;br/&gt;      contrato       IN VARCHAR2 ,&lt;br/&gt;      lineaCapturaIN IN VARCHAR2 ,&lt;br/&gt;      importeFechaDV IN VARCHAR2 --importeFechaVigenciaVerificador&lt;br/&gt;    )&lt;br/&gt;    RETURN VARCHAR2&lt;br/&gt;  AS&lt;br/&gt;    lineaCaptura         VARCHAR2(30) := &apos;&apos;;&lt;br/&gt;    errorParametro       VARCHAR2(30) := &apos;&apos;;&lt;br/&gt;    lanzarErrorParametro EXCEPTION;&lt;br/&gt;  BEGIN&lt;br/&gt;    --Validar que la información de entrada sea correcta&lt;br/&gt;    dbms_output.put_line(&apos;** Valores de entrada **&apos;);&lt;br/&gt;    dbms_output.put_line(&apos;division= &apos; || division);&lt;br/&gt;    dbms_output.put_line(&apos;proyecto = &apos; || proyecto);&lt;br/&gt;    dbms_output.put_line(&apos;contrato = &apos; || contrato);&lt;br/&gt;    dbms_output.put_line(&apos;lineaCapturaIN = &apos; || lineaCapturaIN);&lt;br/&gt;    dbms_output.put_line(&apos;importeFechaDV = &apos; || importeFechaDV);&lt;br/&gt;    /*Que la división sean dos digitos 01 o 02, de lo contrario se regresa error&lt;br/&gt;    **101 - Error de datos de entrada : División solo puede ser 01 Renta, 02 Venta*/&lt;br/&gt;    errorParametro   := NVL(division,&apos;101&apos;);&lt;br/&gt;    IF (errorParametro=&apos;101&apos;) THEN&lt;br/&gt;      raise lanzarErrorParametro;&lt;br/&gt;    END IF;&lt;br/&gt;    dbms_output.put_line(&apos;lineaCapturaP= &apos; || lineaCaptura);&lt;br/&gt;    /*Proyecto sea de 3 digitos, de lo contrario se regresa error&lt;br/&gt;    **102 - Error de datos de entrada : Digitos del Proyecto no es valido, deben ser 3 digitos*/&lt;br/&gt;    errorParametro   := NVL(proyecto,&apos;102&apos;);&lt;br/&gt;    IF (errorParametro=&apos;102&apos;) THEN&lt;br/&gt;      raise lanzarErrorParametro;&lt;br/&gt;    END IF;&lt;br/&gt;    /*Exista un contrato, de lo contrario se regresa error&lt;br/&gt;    **103 - Error de datos de entrada : Numero de contrato no es valido, deben ser diferente de nulo*/&lt;br/&gt;    errorParametro   := NVL(contrato,&apos;103&apos;);&lt;br/&gt;    IF (errorParametro=&apos;103&apos;) THEN&lt;br/&gt;      raise lanzarErrorParametro;&lt;br/&gt;    END IF;&lt;br/&gt;    dbms_output.put_line(&apos;lineaCapturaC= &apos; || lineaCaptura);&lt;br/&gt;    /*Exista línea de captura, de lo contrario se regresa error&lt;br/&gt;    **104 - Error de datos de entrada : Numero de contrato no es valido, deben ser diferente de nulo*/&lt;br/&gt;    errorParametro   := NVL(lineaCapturaIN,&apos;104&apos;);&lt;br/&gt;    IF (errorParametro=&apos;104&apos;) THEN&lt;br/&gt;      raise lanzarErrorParametro;&lt;br/&gt;    END IF;&lt;br/&gt;    dbms_output.put_line(&apos;lineaCapturaL= &apos; || lineaCaptura);&lt;br/&gt;    /*importeFechaDV sea de 8 digitos, de lo contrario se regresa error&lt;br/&gt;    **105 - Error de datos de entrada : el importe, fecha de vigencia y digito verificador no es valido, deben ser de 8 digitos*/&lt;br/&gt;    errorParametro   := NVL(importeFechaDV,&apos;105&apos;);&lt;br/&gt;    IF (errorParametro=&apos;105&apos;) THEN&lt;br/&gt;      raise lanzarErrorParametro;&lt;br/&gt;    END IF;&lt;br/&gt;    dbms_output.put_line(&apos;lineaCapturaI= &apos; || lineaCaptura);&lt;br/&gt;    /* Procesar parametros y formar codigo de la LC&lt;br/&gt;    */&lt;br/&gt;    dbms_output.put_line(&apos;lineaCaptura = &apos; || lineaCaptura);&lt;br/&gt;    lineaCaptura := (division ||proyecto ||contrato ||lineaCapturaIN ||importeFechaDV);&lt;br/&gt;    dbms_output.put_line(&apos;lineaCaptura = &apos; || lineaCaptura);&lt;br/&gt;    RETURN lineaCaptura;&lt;br/&gt;  EXCEPTION -- exception handlers begin&lt;br/&gt;  WHEN lanzarErrorParametro THEN&lt;br/&gt;    RETURN errorParametro;&lt;br/&gt;  END XXFRP_GENERARLC;</source>
</FunctionOracle>