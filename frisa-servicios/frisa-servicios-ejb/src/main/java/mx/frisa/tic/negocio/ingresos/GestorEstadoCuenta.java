/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.frisa.tic.negocio.ingresos;

import com.sun.xml.internal.ws.developer.WSBindingProvider;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import mx.frisa.tic.datos.dto.ingresos.RespuestaDTO;
import mx.frisa.tic.datos.enums.ProcesoEnum;
import mx.frisa.tic.negocio.obiee.AccessDeniedException_Exception;
import mx.frisa.tic.negocio.obiee.ArrayOfParamNameValue;
import mx.frisa.tic.negocio.obiee.ArrayOfString;
import mx.frisa.tic.negocio.obiee.ExternalReportWSSService;
import mx.frisa.tic.negocio.obiee.ExternalReportWSSService_Service;
import mx.frisa.tic.negocio.obiee.InvalidParametersException_Exception;
import mx.frisa.tic.negocio.obiee.ObjectFactory;
import mx.frisa.tic.negocio.obiee.OperationFailedException_Exception;
import mx.frisa.tic.negocio.obiee.ParamNameValue;
import mx.frisa.tic.negocio.obiee.ReportRequest;
import mx.frisa.tic.negocio.obiee.ReportResponse;
import weblogic.wsee.jws.jaxws.owsm.SecurityPoliciesFeature;

/**
 *
 * @author USER_1
 */
@Stateless(name = "GestorEstadoCuenta")
@LocalBean
public class GestorEstadoCuenta implements GestorEstadoCuentaLocal {

    @Override
    public RespuestaDTO procesarEstadosCuenta(final String fechaInicio, final String fechaFinal, final String numeroCuenta) {
        RespuestaDTO respuesta = new RespuestaDTO();
        try {
            ExternalReportWSSService_Service externalReportWSSService_Service;
            // Initialise the SOAP Proxy generated by JDeveloper based on the following WSDL xmlpserver/services/ExternalReportWSSService?wsdl

            externalReportWSSService_Service = new ExternalReportWSSService_Service();

// Set security Policies to reflect your fusion applications
            SecurityPoliciesFeature securityFeatures = new SecurityPoliciesFeature(new String[]{"oracle/wss_username_token_over_ssl_client_policy"});

// Initialise the SOAP Endpoint
            ExternalReportWSSService externalReportWSSService = externalReportWSSService_Service.getExternalReportWSSService(securityFeatures);

// Create a new binding, this example hardcodes the username/password, 
// the recommended approach is to store the username/password in a CSF keystore
            WSBindingProvider wsbp = (WSBindingProvider) externalReportWSSService;

            Map<String, Object> requestContext = wsbp.getRequestContext();

//Map to appropriate Fusion user ID, no need to provide password with SAML authentication
            requestContext.put(WSBindingProvider.USERNAME_PROPERTY, "ta_jperez");

            requestContext.put(WSBindingProvider.PASSWORD_PROPERTY, "Welcome12");

            requestContext.put(WSBindingProvider.ENDPOINT_ADDRESS_PROPERTY, "https://efar-test.fin.us2.oraclecloud.com:443/xmlpserver/services/ExternalReportWSSService");

// Create a new ReportRequest object using the generated ObjectFactory
            ObjectFactory of = new ObjectFactory();

            ReportRequest reportRequest = of.createReportRequest();

// reportAbsolutePath contains the path+name of your report
            reportRequest.setReportAbsolutePath("/Custom/Financials/Cash Management/Reports/XXFRISA_CE_ESTADO_CUENTA.xdo");
            reportRequest.setFlattenXML(true);
            

             ArrayOfParamNameValue fitros = new ArrayOfParamNameValue();
             
             
             
             ParamNameValue parametroNumCta = new ParamNameValue();
             parametroNumCta.setName("BANK_ACCOUNT_NUMBER");
             ArrayOfString valorBuscar = new ArrayOfString();
             valorBuscar.getItem().add(numeroCuenta);
             parametroNumCta.setValues(valorBuscar);
             fitros.getItem().add(parametroNumCta);
             
             ParamNameValue parametroFecIni = new ParamNameValue();
             parametroFecIni.setName("FROM_DATE");
             ArrayOfString valorBuscarFI = new ArrayOfString();
             valorBuscarFI.getItem().add(fechaInicio);
             parametroFecIni.setValues(valorBuscarFI);
             fitros.getItem().add(parametroFecIni);
             
             ParamNameValue parametroFecFin = new ParamNameValue();
             parametroFecFin.setName("TO_DATE");
             ArrayOfString valorBuscarFF = new ArrayOfString();
             valorBuscarFF.getItem().add(fechaFinal);
             parametroFecIni.setValues(valorBuscarFF);
             fitros.getItem().add(parametroFecIni);
             
             
        
            reportRequest.setParameterNameValues( fitros );

// We want raw data
            reportRequest.setReportRawData("");

// Get all the data
            reportRequest.setSizeOfDataChunkDownload(-1);

// Flatten the XML response
            reportRequest.setFlattenXML(true);

// ByPass the cache to ensure we get the latest data
            reportRequest.setByPassCache(true);

// Run the report
            ReportResponse reportResponse = externalReportWSSService.runReport(reportRequest, "");

// Display the output, note the response is an array of bytes, you can convert this to a String
// or you can use a DocumentBuilder to put the values into a XLM Document object for further processing
            System.out.println("Content Type=" + reportResponse.getReportContentType());

            System.out.println("Data ");

            System.out.println("-------------------------------");

            String data = new String(reportResponse.getReportBytes());

            System.out.println(data);

            System.out.println("-------------------------------");
            //Lanzar a procedimiento de base de datos los estados de cuenta a procesar
            
            //Regresar respuesta exitosa
            respuesta.setIdError("0");
            respuesta.setDescripcionError("");
            respuesta.setProceso(ProcesoEnum.EXITOSO.toString());

        } catch (AccessDeniedException_Exception | InvalidParametersException_Exception | OperationFailedException_Exception ex) {
            Logger.getLogger(GestorEstadoCuenta.class.getName()).log(Level.SEVERE, null, ex);
            respuesta.setIdError("0");
            respuesta.setDescripcionError("");
            respuesta.setProceso(ProcesoEnum.EXITOSO.toString());
        }
        return null;
    }

}
